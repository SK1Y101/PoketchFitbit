"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InitializeResult = exports.HostCapabilities = exports.ApplicationHostCapabilities = exports.DebugCapabilities = exports.AppDebugCapabilities = exports.HostKind = exports.InitializeParams = exports.DebuggerCapabilities = void 0;
const t = require("io-ts");
const AppInstall_1 = require("./AppInstall");
const BulkData_1 = require("./BulkData");
const Console_1 = require("./Console");
const Eval_1 = require("./Eval");
const HeapSnapshot_1 = require("./HeapSnapshot");
const Launch_1 = require("./Launch");
const Meta_1 = require("./Meta");
const Screenshot_1 = require("./Screenshot");
exports.DebuggerCapabilities = t.partial({
    protocol: Meta_1.ProtocolCapabilities,
    io: BulkData_1.IOCapabilities,
    console: Console_1.ConsoleDebuggerCapabilities,
    experimental: t.any,
}, 'DebuggerCapabilities');
exports.InitializeParams = t.intersection([
    t.interface({
        capabilities: exports.DebuggerCapabilities,
    }),
    t.partial({
        userAgent: t.string,
    }),
], 'InitializeParams');
exports.HostKind = t.union([
    t.literal('device'),
    t.literal('companion'),
]);
exports.AppDebugCapabilities = t.partial({
    heapSnapshot: HeapSnapshot_1.HeapSnapshotCapability,
    evalToString: Eval_1.EvalToStringCapability,
}, 'AppDebugCapabilities');
exports.DebugCapabilities = t.partial({
    app: exports.AppDebugCapabilities,
    companion: exports.AppDebugCapabilities,
    settings: exports.AppDebugCapabilities,
});
exports.ApplicationHostCapabilities = t.partial({
    install: AppInstall_1.AppInstallCapabilities,
    launch: Launch_1.LaunchCapabilities,
    screenshot: Screenshot_1.ScreenshotCapabilities,
    debug: exports.DebugCapabilities,
}, 'ApplicationHostCapabilities');
exports.HostCapabilities = t.partial({
    protocol: Meta_1.ProtocolCapabilities,
    io: BulkData_1.IOCapabilities,
    appHost: exports.ApplicationHostCapabilities,
    experimental: t.any,
}, 'HostCapabilities');
exports.InitializeResult = t.intersection([
    t.interface({
        device: t.string,
        hostKind: exports.HostKind,
        capabilities: exports.HostCapabilities,
    }),
    t.partial({
        hostID: t.string,
    }),
], 'InitializeResult');
//# sourceMappingURL=Initialize.js.map