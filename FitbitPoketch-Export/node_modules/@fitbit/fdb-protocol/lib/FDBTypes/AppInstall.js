"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppInstallResult = exports.InstallType = exports.AppInstallStreamBeginParams = exports.AppInstallCapabilities = exports.CompanionHostDescriptor = exports.AppHostDescriptor = exports.APICompatibilityDescriptor = void 0;
const t = require("io-ts");
const Structures_1 = require("./Structures");
exports.APICompatibilityDescriptor = t.intersection([
    t.interface({
        maxAPIVersion: Structures_1.ReleaseSemver,
    }),
    t.partial({
        exactAPIVersion: t.array(Structures_1.Semver),
    }),
], 'APICompatibilityDescriptor');
exports.AppHostDescriptor = t.intersection([
    t.partial({
        maxAPIVersion: Structures_1.ReleaseSemver,
        exactAPIVersion: t.array(Structures_1.Semver),
    }),
    t.interface({
        family: t.string,
        version: t.string,
    }),
], 'AppHostDescriptor');
exports.CompanionHostDescriptor = exports.APICompatibilityDescriptor;
exports.AppInstallCapabilities = t.partial({
    sideloadStream: t.boolean,
    appBundle: t.boolean,
    companionBundle: t.boolean,
    appCompatibility: t.array(exports.AppHostDescriptor),
    companionCompatibility: exports.CompanionHostDescriptor,
    partialBundle: t.boolean,
}, 'AppInstallCapabilities');
exports.AppInstallStreamBeginParams = t.interface({
    componentBundle: Structures_1.ComponentBundleKind,
}, 'AppInstallStreamBeginParams');
exports.InstallType = t.keyof({
    full: null,
    partial: null,
}, 'InstallType');
exports.AppInstallResult = t.intersection([
    t.interface({
        app: Structures_1.App,
        components: t.array(Structures_1.Component),
    }),
    t.partial({
        installType: exports.InstallType,
    }),
], 'AppInstallResult');
//# sourceMappingURL=AppInstall.js.map