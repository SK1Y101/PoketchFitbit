"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentBundleKind = exports.InstalledAppComponent = exports.InstalledApp = exports.DeviceHost = exports.AppComponent = exports.Component = exports.App = exports.BuildID = exports.UUID = exports.Position = exports.ReleaseSemver = exports.Semver = exports.Timestamp = exports.AppFileURI = exports.ObjectURI = exports.PositiveInteger = exports.NonNegativeInteger = exports.ErrorCodes = void 0;
const t = require("io-ts");
const Either_1 = require("fp-ts/lib/Either");
const isUUID_1 = require("validator/lib/isUUID");
const semver = require("semver");
var ErrorCodes;
(function (ErrorCodes) {
    ErrorCodes[ErrorCodes["HostNotInitialized"] = -32001] = "HostNotInitialized";
    ErrorCodes[ErrorCodes["MessageTooLong"] = -32002] = "MessageTooLong";
    ErrorCodes[ErrorCodes["ResponseTooLong"] = -32003] = "ResponseTooLong";
    ErrorCodes[ErrorCodes["RequestError"] = -1] = "RequestError";
})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));
exports.NonNegativeInteger = t.refinement(t.Integer, v => v >= 0, 'NonNegativeInteger');
exports.PositiveInteger = t.refinement(t.Integer, v => v > 0, 'PositiveInteger');
exports.ObjectURI = t.string;
exports.AppFileURI = t.refinement(exports.ObjectURI, s => s.startsWith('app:///'), 'AppFileURI');
exports.Timestamp = t.number;
exports.Semver = new t.Type('Semver', (value) => t.string.is(value) && semver.valid(value) !== null, (value, context) => Either_1.either.chain(t.string.validate(value, context), (str) => {
    const version = semver.valid(str);
    return version === null ? t.failure(str, context) : t.success(version);
}), t.identity);
exports.ReleaseSemver = t.refinement(exports.Semver, s => semver.parse(s).prerelease.length === 0, 'ReleaseSemver');
exports.Position = t.intersection([
    t.interface({
        source: exports.AppFileURI,
        line: exports.NonNegativeInteger,
        column: exports.NonNegativeInteger,
    }),
    t.partial({
        generated: t.boolean,
        name: t.string,
    }),
], 'Position');
exports.UUID = t.refinement(t.string, s => isUUID_1.default(s), 'UUID');
exports.BuildID = t.refinement(t.string, s => /^[0-9a-fA-F]{16}$/.test(s), 'BuildID');
exports.App = t.interface({
    uuid: exports.UUID,
    buildID: exports.BuildID,
}, 'App');
exports.Component = t.union([t.literal('app'), t.literal('companion'), t.literal('settings')], 'Component');
exports.AppComponent = t.intersection([exports.App, t.interface({ component: exports.Component })], 'AppComponent');
exports.DeviceHost = t.partial({
    hostID: t.string,
}, 'DeviceHost');
exports.InstalledApp = t.union([exports.App, exports.DeviceHost], 'InstalledApp');
exports.InstalledAppComponent = t.union([exports.AppComponent, exports.DeviceHost], 'InstalledAppComponent');
exports.ComponentBundleKind = t.union([
    t.literal('app'),
    t.literal('companion'),
]);
//# sourceMappingURL=Structures.js.map