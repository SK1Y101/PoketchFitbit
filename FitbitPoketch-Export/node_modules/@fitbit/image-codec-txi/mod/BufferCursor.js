var BufferCursor = /** @class */ (function () {
    function BufferCursor(length) {
        this.length = length;
        this.p = 0;
        this.array = new Uint8Array(length);
    }
    Object.defineProperty(BufferCursor.prototype, "buffer", {
        get: function () {
            return this.array.buffer;
        },
        enumerable: false,
        configurable: true
    });
    BufferCursor.prototype.seek = function (offset) {
        this.p = offset;
    };
    BufferCursor.prototype.tell = function () {
        return this.p;
    };
    BufferCursor.prototype.slice = function (from, to) {
        if (from === void 0) { from = 0; }
        if (to === void 0) { to = this.tell(); }
        return this.buffer.slice(from, to);
    };
    BufferCursor.prototype.writeArray = function (arr) {
        this.array.set(arr, this.p);
        this.p += arr.length;
    };
    return BufferCursor;
}());
export default BufferCursor;
//# sourceMappingURL=BufferCursor.js.map