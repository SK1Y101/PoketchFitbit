"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateBuildTargets = void 0;
const tslib_1 = require("tslib");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
const semver_1 = tslib_1.__importDefault(require("semver"));
const sdkVersion_1 = tslib_1.__importDefault(require("./sdkVersion"));
const baseBuildTargets = {
    higgs: {
        displayName: 'Fitbit Ionic',
        platform: ['30.1.2+'],
        resourceFilterTag: '348x250',
        specs: { screenSize: { width: 348, height: 250 } },
    },
    meson: {
        displayName: 'Fitbit Versa',
        platform: ['32.4.18+'],
        resourceFilterTag: '300x300',
        specs: { screenSize: { width: 300, height: 300 } },
    },
    gemini: {
        displayName: 'Fitbit Versa Lite',
        platform: ['33.1.30+'],
        resourceFilterTag: '300x300',
        specs: { screenSize: { width: 300, height: 300 } },
        minSDKVersion: '3.1.0',
        maxDeviceBundleSize: 3145728,
    },
    mira: {
        displayName: 'Fitbit Versa 2',
        platform: ['68.9.12+'],
        resourceFilterTag: '300x300',
        specs: { screenSize: { width: 300, height: 300 } },
        minSDKVersion: '4.0.0',
    },
};
let extraBuildTargets;
try {
    extraBuildTargets = require('@fitbit/sdk-build-targets').default;
}
catch (_a) { }
function generateBuildTargets() {
    return lodash_1.default.pickBy(Object.assign(Object.assign({}, baseBuildTargets), extraBuildTargets), ({ minSDKVersion }) => minSDKVersion === undefined ||
        semver_1.default.gte(sdkVersion_1.default().format(), minSDKVersion));
}
exports.generateBuildTargets = generateBuildTargets;
const buildTargets = generateBuildTargets();
exports.default = buildTargets;
