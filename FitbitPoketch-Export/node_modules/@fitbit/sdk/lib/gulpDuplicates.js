"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const stream_1 = tslib_1.__importDefault(require("stream"));
const humanize_list_1 = tslib_1.__importDefault(require("humanize-list"));
const plugin_error_1 = tslib_1.__importDefault(require("plugin-error"));
const PLUGIN_NAME = 'duplicates';
function vinylAssertFiles() {
    const foundPaths = new Set();
    const duplicatePaths = new Set();
    return new stream_1.default.Transform({
        objectMode: true,
        transform(file, _, cb) {
            if (!file.isNull()) {
                if (foundPaths.has(file.relative)) {
                    duplicatePaths.add(file.relative);
                }
                else {
                    foundPaths.add(file.relative);
                }
            }
            cb(undefined, file);
        },
        flush(cb) {
            if (duplicatePaths.size !== 0) {
                this.emit('error', new plugin_error_1.default(PLUGIN_NAME, `One or more files in the build output were duplicates: ${humanize_list_1.default([...duplicatePaths])}`));
            }
            cb();
        },
    });
}
exports.default = vinylAssertFiles;
