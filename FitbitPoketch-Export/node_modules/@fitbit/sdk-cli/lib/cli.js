#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const process_1 = tslib_1.__importDefault(require("process"));
const update_notifier_1 = tslib_1.__importDefault(require("update-notifier"));
const vorpal_1 = tslib_1.__importDefault(require("@moleculer/vorpal"));
const checkForUpdate_1 = tslib_1.__importDefault(require("./checkForUpdate"));
const checkLogin_1 = tslib_1.__importDefault(require("./checkLogin"));
const userProfile_1 = tslib_1.__importDefault(require("./api/userProfile"));
const AppContext_1 = tslib_1.__importDefault(require("./models/AppContext"));
const HostConnections_1 = tslib_1.__importDefault(require("./models/HostConnections"));
const LogConsumer_1 = tslib_1.__importDefault(require("./models/LogConsumer"));
const formatMessage_1 = require("./models/formatMessage");
const build_1 = tslib_1.__importDefault(require("./commands/build"));
const buildAndInstall_1 = tslib_1.__importDefault(require("./commands/buildAndInstall"));
const connect_1 = tslib_1.__importDefault(require("./commands/connect"));
const heapSnapshot_1 = tslib_1.__importDefault(require("./commands/heapSnapshot"));
const hosts_1 = tslib_1.__importDefault(require("./commands/hosts"));
const install_1 = tslib_1.__importDefault(require("./commands/install"));
const logout_1 = tslib_1.__importDefault(require("./commands/logout"));
const mockHost_1 = tslib_1.__importDefault(require("./commands/mockHost"));
const repl_1 = tslib_1.__importDefault(require("./commands/repl"));
const screenshot_1 = tslib_1.__importDefault(require("./commands/screenshot"));
const setAppPackage_1 = tslib_1.__importDefault(require("./commands/setAppPackage"));
const enableQACommands = process_1.default.env.FITBIT_QA_COMMANDS === '1';
const appContext = new AppContext_1.default();
const hostConnections = new HostConnections_1.default();
const cli = new vorpal_1.default();
cli.history('Fitbit-Command-Line-SDK');
cli.use(build_1.default);
cli.use(buildAndInstall_1.default({ hostConnections, appContext }));
cli.use(connect_1.default({ hostConnections }));
cli.use(heapSnapshot_1.default({ hostConnections }));
cli.use(install_1.default({ hostConnections, appContext }));
cli.use(screenshot_1.default({ hostConnections }));
cli.use(setAppPackage_1.default({ appContext }));
cli.use(logout_1.default);
cli.use(repl_1.default({ hostConnections }));
if (enableQACommands) {
    cli.use(hosts_1.default);
    cli.use(mockHost_1.default);
}
new LogConsumer_1.default({
    appContext,
    hostConnections,
    messageFormatter: message => formatMessage_1.formatMessage(cli, message),
});
async function main() {
    checkForUpdate_1.default(update_notifier_1.default);
    await checkLogin_1.default();
    const user = await userProfile_1.default();
    if (user.fullName) {
        console.log(`Logged in as ${user.fullName} <${user.email}>`);
    }
    else {
        console.log(`Logged in as ${user.email}`);
    }
    cli
        .delimiter('fitbit$')
        .show();
}
main();
//# sourceMappingURL=cli.js.map