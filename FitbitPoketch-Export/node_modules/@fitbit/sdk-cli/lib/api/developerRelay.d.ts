/// <reference types="node" />
import * as t from 'io-ts';
import stream from 'stream';
export declare const Host: t.TypeC<{
    id: t.StringC;
    displayName: t.StringC;
    roles: t.ArrayC<t.StringC>;
    state: t.UnionC<[t.LiteralC<"available">, t.LiteralC<"busy">]>;
}>;
export declare type Host = t.TypeOf<typeof Host>;
export declare function connect(hostID: string): Promise<stream.Duplex>;
export declare function hosts(): Promise<{
    appHost: {
        id: string;
        displayName: string;
        roles: string[];
        state: "available" | "busy";
    }[];
    companionHost: {
        id: string;
        displayName: string;
        roles: string[];
        state: "available" | "busy";
    }[];
}>;
//# sourceMappingURL=developerRelay.d.ts.map