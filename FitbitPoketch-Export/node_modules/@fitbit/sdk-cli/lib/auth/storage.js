"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const token_response_1 = require("@openid/appauth/built/token_response");
const t = tslib_1.__importStar(require("io-ts"));
const keytar_1 = tslib_1.__importDefault(require("keytar"));
const environment_1 = tslib_1.__importDefault(require("./environment"));
const keyStoreService = 'fitbit-sdk';
const keyStoreAccount = environment_1.default().environment;
const AuthStorage = t.interface({
    access_token: t.string,
    refresh_token: t.string,
    issued_at: t.number,
    expires_in: t.string,
});
function set(tokenResponse) {
    return keytar_1.default.setPassword(keyStoreService, keyStoreAccount, JSON.stringify(tokenResponse.toJson()));
}
async function get() {
    const authDataStr = await keytar_1.default.getPassword(keyStoreService, keyStoreAccount);
    if (authDataStr === null)
        return null;
    let authData;
    try {
        authData = JSON.parse(authDataStr);
    }
    catch (ex) {
        await clear();
        return null;
    }
    if (!AuthStorage.is(authData)) {
        await clear();
        return null;
    }
    return new token_response_1.TokenResponse(authData);
}
function clear() {
    return keytar_1.default.deletePassword(keyStoreService, keyStoreAccount);
}
exports.default = {
    set,
    get,
    clear,
};
//# sourceMappingURL=storage.js.map