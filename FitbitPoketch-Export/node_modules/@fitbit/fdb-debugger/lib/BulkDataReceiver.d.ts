/// <reference types="node" />
import { TypesafeRequestDispatcher } from '@fitbit/jsonrpc-ts';
import { BulkData, BulkDataStream, FDBTypes } from '@fitbit/fdb-protocol';
export default class BulkDataReceiver {
    bulkData: BulkData;
    name: string;
    private contexts;
    constructor(bulkData: BulkData, name: string);
    receiveFromStream(executor: (stream: BulkDataStream) => any): Promise<Buffer>;
    private popStreamContext;
    finalizeStream: ({ stream }: FDBTypes.StreamCloseParams) => Promise<void>;
    abortStream: ({ stream }: FDBTypes.StreamCloseParams) => Promise<void>;
    registerCloserMethods(dispatcher: TypesafeRequestDispatcher, methodPrefix: string): void;
    registerCloserMethods(dispatcher: TypesafeRequestDispatcher, finalizeMethod: string, abortMethod: string): void;
}
//# sourceMappingURL=BulkDataReceiver.d.ts.map