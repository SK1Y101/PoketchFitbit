/// <reference types="node" />
import { Transform } from 'stream';
import { FDBTypes } from '@fitbit/fdb-protocol';
export declare type EncoderCallback = (data: any) => ArrayBufferView | string;
export default class ConfigurableEncode extends Transform {
    encoder: FDBTypes.SerializationType;
    constructor(encoder?: FDBTypes.SerializationType);
    canAcceptRawBuffers(): boolean;
    setEncoder(encoder: FDBTypes.SerializationType): void;
    _transform(chunk: any, encoding: string, callback: (err?: Error, data?: any) => void): void;
}
//# sourceMappingURL=ConfigurableEncode.d.ts.map